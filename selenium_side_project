{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.support.select import Select\n",
    "import time \n",
    "import pandas as pd\n",
    "from bs4 import BeautifulSoup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 유저 아이디와 패스워드는 입력해서 사용\n",
    "#user_id = \n",
    "#user_pass = "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Brand</th>\n",
       "      <th>Model</th>\n",
       "      <th>E-D(cc)</th>\n",
       "      <th>Price</th>\n",
       "      <th>2021/1</th>\n",
       "      <th>%Share</th>\n",
       "      <th>Brand</th>\n",
       "      <th>Model</th>\n",
       "      <th>E-D(cc)</th>\n",
       "      <th>Price</th>\n",
       "      <th>2021/2</th>\n",
       "      <th>%Share</th>\n",
       "      <th>Brand</th>\n",
       "      <th>Model</th>\n",
       "      <th>E-D(cc)</th>\n",
       "      <th>Price</th>\n",
       "      <th>2021/3</th>\n",
       "      <th>%Share</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Audi</td>\n",
       "      <td>A3 40 TFSI</td>\n",
       "      <td>1984</td>\n",
       "      <td>39675</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Audi</td>\n",
       "      <td>A3 40 TFSI</td>\n",
       "      <td>1984</td>\n",
       "      <td>39675</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>Audi</td>\n",
       "      <td>A3 40 TFSI</td>\n",
       "      <td>1984</td>\n",
       "      <td>39675</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 35 TDI</td>\n",
       "      <td>1968</td>\n",
       "      <td>51318</td>\n",
       "      <td>78.0</td>\n",
       "      <td>0.35</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 35 TDI</td>\n",
       "      <td>1968</td>\n",
       "      <td>51318</td>\n",
       "      <td>8.0</td>\n",
       "      <td>0.04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 35 TDI</td>\n",
       "      <td>1968</td>\n",
       "      <td>51318</td>\n",
       "      <td>9</td>\n",
       "      <td>0.03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 40 TDI quattro</td>\n",
       "      <td>1968</td>\n",
       "      <td>59663</td>\n",
       "      <td>12.0</td>\n",
       "      <td>0.05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 40 TDI quattro</td>\n",
       "      <td>1968</td>\n",
       "      <td>59663</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.01</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 40 TDI quattro</td>\n",
       "      <td>1968</td>\n",
       "      <td>59663</td>\n",
       "      <td>3</td>\n",
       "      <td>0.01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 40 TFSI</td>\n",
       "      <td>1984</td>\n",
       "      <td>49355</td>\n",
       "      <td>98.0</td>\n",
       "      <td>0.44</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 40 TFSI</td>\n",
       "      <td>1984</td>\n",
       "      <td>49355</td>\n",
       "      <td>96.0</td>\n",
       "      <td>0.43</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 40 TFSI</td>\n",
       "      <td>1984</td>\n",
       "      <td>49355</td>\n",
       "      <td>141</td>\n",
       "      <td>0.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>A5 Cabriolet 45 TFSI quattro</td>\n",
       "      <td>1984</td>\n",
       "      <td>75664</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 45 TFSI quattro</td>\n",
       "      <td>1984</td>\n",
       "      <td>60939</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.03</td>\n",
       "      <td>NaN</td>\n",
       "      <td>A4 45 TFSI quattro</td>\n",
       "      <td>1984</td>\n",
       "      <td>60939</td>\n",
       "      <td>10</td>\n",
       "      <td>0.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>550</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>XC90 D5 AWD</td>\n",
       "      <td>1969</td>\n",
       "      <td>80300</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>551</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>XC90 T6 AWD</td>\n",
       "      <td>1969</td>\n",
       "      <td>95500</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>552</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>XC90 T8 AWD</td>\n",
       "      <td>1969</td>\n",
       "      <td>110200</td>\n",
       "      <td>110</td>\n",
       "      <td>0.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>553</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Volvo-Total</td>\n",
       "      <td>Volvo-Total</td>\n",
       "      <td>Volvo-Total</td>\n",
       "      <td>Volvo-Total</td>\n",
       "      <td>1251</td>\n",
       "      <td>4.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Grand-Total</td>\n",
       "      <td>Grand-Total</td>\n",
       "      <td>Grand-Total</td>\n",
       "      <td>Grand-Total</td>\n",
       "      <td>27297</td>\n",
       "      <td>100.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>555 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Brand                         Model E-D(cc)  Price  2021/1  %Share Brand  \\\n",
       "0    Audi                    A3 40 TFSI    1984  39675     0.0    0.00  Audi   \n",
       "1     NaN                     A4 35 TDI    1968  51318    78.0    0.35   NaN   \n",
       "2     NaN             A4 40 TDI quattro    1968  59663    12.0    0.05   NaN   \n",
       "3     NaN                    A4 40 TFSI    1984  49355    98.0    0.44   NaN   \n",
       "4     NaN  A5 Cabriolet 45 TFSI quattro    1984  75664     0.0    0.00   NaN   \n",
       "..    ...                           ...     ...    ...     ...     ...   ...   \n",
       "550   NaN                           NaN     NaN    NaN     NaN     NaN   NaN   \n",
       "551   NaN                           NaN     NaN    NaN     NaN     NaN   NaN   \n",
       "552   NaN                           NaN     NaN    NaN     NaN     NaN   NaN   \n",
       "553   NaN                           NaN     NaN    NaN     NaN     NaN   NaN   \n",
       "554   NaN                           NaN     NaN    NaN     NaN     NaN   NaN   \n",
       "\n",
       "                  Model E-D(cc)  Price  2021/2  %Share        Brand  \\\n",
       "0            A3 40 TFSI    1984  39675     0.0    0.00         Audi   \n",
       "1             A4 35 TDI    1968  51318     8.0    0.04          NaN   \n",
       "2     A4 40 TDI quattro    1968  59663     3.0    0.01          NaN   \n",
       "3            A4 40 TFSI    1984  49355    96.0    0.43          NaN   \n",
       "4    A4 45 TFSI quattro    1984  60939     6.0    0.03          NaN   \n",
       "..                  ...     ...    ...     ...     ...          ...   \n",
       "550                 NaN     NaN    NaN     NaN     NaN          NaN   \n",
       "551                 NaN     NaN    NaN     NaN     NaN          NaN   \n",
       "552                 NaN     NaN    NaN     NaN     NaN          NaN   \n",
       "553                 NaN     NaN    NaN     NaN     NaN  Volvo-Total   \n",
       "554                 NaN     NaN    NaN     NaN     NaN  Grand-Total   \n",
       "\n",
       "                  Model      E-D(cc)        Price  2021/3  %Share  \n",
       "0            A3 40 TFSI         1984        39675       0    0.00  \n",
       "1             A4 35 TDI         1968        51318       9    0.03  \n",
       "2     A4 40 TDI quattro         1968        59663       3    0.01  \n",
       "3            A4 40 TFSI         1984        49355     141    0.52  \n",
       "4    A4 45 TFSI quattro         1984        60939      10    0.04  \n",
       "..                  ...          ...          ...     ...     ...  \n",
       "550         XC90 D5 AWD         1969        80300       0    0.00  \n",
       "551         XC90 T6 AWD         1969        95500       0    0.00  \n",
       "552         XC90 T8 AWD         1969       110200     110    0.40  \n",
       "553         Volvo-Total  Volvo-Total  Volvo-Total    1251    4.58  \n",
       "554         Grand-Total  Grand-Total  Grand-Total   27297  100.00  \n",
       "\n",
       "[555 rows x 18 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def model():\n",
    "    driver = webdriver.Chrome('./chromedriver')\n",
    "    driver.get(\"https://www.kaida.co.kr/uat/uia/egovLoginUsr.do\")\n",
    "\n",
    "    #유저네임 입력 \n",
    "    username = driver.find_element_by_xpath(\"\"\"//*[@id=\"userId\"]\"\"\")\n",
    "    username.send_keys(f\"{user_id}\")\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    #패스워드 입력\n",
    "    password = driver.find_element_by_xpath(\"\"\"//*[@id=\"userPass\"]\"\"\")\n",
    "    password.send_keys(f\"{user_pass}\")\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #로그인 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"loginForm\"]/button[1]\"\"\").click()\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #통계센터 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"pageNavi\"]/div[1]/div/nav/div[2]/h4/a\"\"\").click()\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    # 세로열을 모델로 선택 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_vertical\"]/label[2]/span\"\"\").click()\n",
    "\n",
    "    df = pd.DataFrame()\n",
    "\n",
    "    \n",
    "    for year in range(2016, 2022):\n",
    "        #년도 선택 \n",
    "\n",
    "        years= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setStartYear\"]\"\"\"))\n",
    "        years.select_by_value(f'{year}')\n",
    "\n",
    "        for month in range(1, 13):\n",
    "\n",
    "            time.sleep(0.2)\n",
    "\n",
    "            #월 선택 \n",
    "            months = \"\"\"//*[@id=\"dev_setStartMonth\"]/option[{}]\"\"\" \n",
    "            driver.find_element_by_xpath(months.format(month)).click()\n",
    "\n",
    "            time.sleep(0.2)\n",
    "\n",
    "            # 검색하기 클릭 \n",
    "            find = \"\"\"//*[@id=\"mainCenter\"]/div/article[1]/div/form/div[2]/button\"\"\"\n",
    "            driver.find_element_by_xpath(find).click()\n",
    "\n",
    "            time.sleep(2)\n",
    "\n",
    "            soup = BeautifulSoup(driver.page_source, \"lxml\")\n",
    "            table = soup.find_all('table')[1]\n",
    "            df1 = pd.read_html(str(table))[0]\n",
    "            df1 = df1.iloc[:,:6]\n",
    "            df1.columns = [\"Brand\", \"Model\", \"E-D(cc)\", \"Price\", str(year) +\"/\" + str(month), \"%Share\"]\n",
    "            df = pd.concat([df, df1.iloc[:,:6]], axis=1)\n",
    "\n",
    "            if month is None: \n",
    "                break\n",
    "\n",
    "    df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_excel(r'side_project.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "def region(startYear=2016, endYear=2021):\n",
    "    \"\"\"\n",
    "    startYear = year to start on. default=2016\n",
    "    endYear = year to end. default=2021\n",
    "    \"\"\"\n",
    "    \n",
    "    driver = webdriver.Chrome('./chromedriver')\n",
    "    driver.get(\"https://www.kaida.co.kr/uat/uia/egovLoginUsr.do\")\n",
    "\n",
    "\n",
    "    #유저네임 입력 \n",
    "    username = driver.find_element_by_xpath(\"\"\"//*[@id=\"userId\"]\"\"\")\n",
    "    username.send_keys(f\"{user_id}\")\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    #패스워드 입력\n",
    "    password = driver.find_element_by_xpath(\"\"\"//*[@id=\"userPass\"]\"\"\")\n",
    "    password.send_keys(f\"{user_pass}\")\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #로그인 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"loginForm\"]/button[1]\"\"\").click()\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #통계센터 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"pageNavi\"]/div[1]/div/nav/div[2]/h4/a\"\"\").click()\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    # 세로열을 지역으로 선택 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_vertical\"]/label[5]/span\"\"\").click()\n",
    "\n",
    "    #년도 선택 \n",
    "    start_year= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setStartYear\"]\"\"\"))\n",
    "    start_year.select_by_value(f'{startYear}')\n",
    "    \n",
    "    time.sleep(0.2)\n",
    "    \n",
    "        \n",
    "    end_years= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setEndYear\"]\"\"\"))\n",
    "    end_years.select_by_value(f'{endYear}')\n",
    "\n",
    "\n",
    "    time.sleep(0.2)\n",
    "\n",
    "    #검색하기 클릭 \n",
    "    find = \"\"\"//*[@id=\"mainCenter\"]/div/article[1]/div/form/div[2]/button\"\"\"\n",
    "    driver.find_element_by_xpath(find).click()\n",
    "\n",
    "    time.sleep(3)\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "    soup = BeautifulSoup(driver.page_source, \"lxml\")\n",
    "    table = soup.find_all('table')[1]\n",
    "    df1 = pd.read_html(str(table))[0]\n",
    "    df = df.append(df1)\n",
    "    df.columns = [\"Region\", \"Year\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \n",
    "                 \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Total\"]    \n",
    "\n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "region = region()\n",
    "region.to_excel(r'region_data.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "def age(startYear=2016, endYear=2021):\n",
    "    \"\"\"\n",
    "    startYear = year to start on. default=2016\n",
    "    endYear = year to end. default=2021\n",
    "    \"\"\"\n",
    "    driver = webdriver.Chrome('./chromedriver')\n",
    "    driver.get(\"https://www.kaida.co.kr/uat/uia/egovLoginUsr.do\")\n",
    "\n",
    "\n",
    "    #유저네임 입력 \n",
    "    username = driver.find_element_by_xpath(\"\"\"//*[@id=\"userId\"]\"\"\")\n",
    "    username.send_keys(f\"{user_id}\")\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    #패스워드 입력\n",
    "    password = driver.find_element_by_xpath(\"\"\"//*[@id=\"userPass\"]\"\"\")\n",
    "    password.send_keys(f\"{user_pass}\")\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #로그인 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"loginForm\"]/button[1]\"\"\").click()\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #통계센터 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"pageNavi\"]/div[1]/div/nav/div[2]/h4/a\"\"\").click()\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    # 세로열을 연령으로 선택 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_vertical\"]/label[7]/span\"\"\").click()\n",
    "\n",
    "    #년도 선택 \n",
    "    start_year= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setStartYear\"]\"\"\"))\n",
    "    start_year.select_by_value(f'{startYear}')\n",
    "    \n",
    "    time.sleep(0.2)\n",
    "    \n",
    "        \n",
    "    end_years= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setEndYear\"]\"\"\"))\n",
    "    end_years.select_by_value(f'{endYear}')\n",
    "\n",
    "\n",
    "    time.sleep(0.2)\n",
    "\n",
    "    #검색하기 클릭 \n",
    "    find = \"\"\"//*[@id=\"mainCenter\"]/div/article[1]/div/form/div[2]/button\"\"\"\n",
    "    driver.find_element_by_xpath(find).click()\n",
    "\n",
    "    time.sleep(3)\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "    soup = BeautifulSoup(driver.page_source, \"lxml\")\n",
    "    table = soup.find_all('table')[1]\n",
    "    df1 = pd.read_html(str(table))[0]\n",
    "    df = df.append(df1)\n",
    "    df.columns = [\"Age\", \"Year\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \n",
    "                  \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Total\"]\n",
    "\n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "age = age()\n",
    "age.to_excel(r'age_data.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "def fuel(startYear=2016, endYear=2021):\n",
    "    \"\"\"\n",
    "    startYear = year to start on. default=2016\n",
    "    endYear = year to end. default=2021\n",
    "    \"\"\"\n",
    "    driver = webdriver.Chrome('./chromedriver')\n",
    "    driver.get(\"https://www.kaida.co.kr/uat/uia/egovLoginUsr.do\")\n",
    "\n",
    "\n",
    "    #유저네임 입력 \n",
    "    username = driver.find_element_by_xpath(\"\"\"//*[@id=\"userId\"]\"\"\")\n",
    "    username.send_keys(f\"{user_id}\")\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    #패스워드 입력\n",
    "    password = driver.find_element_by_xpath(\"\"\"//*[@id=\"userPass\"]\"\"\")\n",
    "    password.send_keys(f\"{user_pass}\")\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #로그인 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"loginForm\"]/button[1]\"\"\").click()\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #통계센터 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"pageNavi\"]/div[1]/div/nav/div[2]/h4/a\"\"\").click()\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    # 세로열을 연료로 선택 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_vertical\"]/label[9]/span\"\"\").click()\n",
    "\n",
    "    #년도 선택 \n",
    "    start_year= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setStartYear\"]\"\"\"))\n",
    "    start_year.select_by_value(f'{startYear}')\n",
    "    \n",
    "    time.sleep(0.2)\n",
    "    \n",
    "        \n",
    "    end_years= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setEndYear\"]\"\"\"))\n",
    "    end_years.select_by_value(f'{endYear}')\n",
    "\n",
    "\n",
    "    time.sleep(0.2)\n",
    "\n",
    "    #검색하기 클릭 \n",
    "    find = \"\"\"//*[@id=\"mainCenter\"]/div/article[1]/div/form/div[2]/button\"\"\"\n",
    "    driver.find_element_by_xpath(find).click()\n",
    "\n",
    "    time.sleep(3)\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "    soup = BeautifulSoup(driver.page_source, \"lxml\")\n",
    "    table = soup.find_all('table')[1]\n",
    "    df1 = pd.read_html(str(table))[0]\n",
    "    df = df.append(df1)\n",
    "    df.columns = [\"Fuel\", \"Year\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \n",
    "                 \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Total\"]\n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "fuel = fuel()\n",
    "fuel.to_excel(r'fuel_data.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "def purchasing_type(startYear=2016, endYear=2021):\n",
    "    \"\"\"\n",
    "    startYear = year to start on. default=2016\n",
    "    endYear = year to end. default=2021\n",
    "    \"\"\"\n",
    "    driver = webdriver.Chrome('./chromedriver')\n",
    "    driver.get(\"https://www.kaida.co.kr/uat/uia/egovLoginUsr.do\")\n",
    "\n",
    "\n",
    "    #유저네임 입력 \n",
    "    username = driver.find_element_by_xpath(\"\"\"//*[@id=\"userId\"]\"\"\")\n",
    "    username.send_keys(f\"{user_id}\")\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    #패스워드 입력\n",
    "    password = driver.find_element_by_xpath(\"\"\"//*[@id=\"userPass\"]\"\"\")\n",
    "    password.send_keys(f\"{user_pass}\")\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #로그인 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"loginForm\"]/button[1]\"\"\").click()\n",
    "\n",
    "    time.sleep(0.3)\n",
    "\n",
    "    #통계센터 클릭 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"pageNavi\"]/div[1]/div/nav/div[2]/h4/a\"\"\").click()\n",
    "\n",
    "    time.sleep(0.5)\n",
    "\n",
    "    # 세로열을 구매유형으로 선택 \n",
    "    driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_vertical\"]/label[10]/span\"\"\").click()\n",
    "\n",
    "    #년도 선택 \n",
    "    start_year= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setStartYear\"]\"\"\"))\n",
    "    start_year.select_by_value(f'{startYear}')\n",
    "    \n",
    "    time.sleep(0.2)\n",
    "    \n",
    "        \n",
    "    end_years= Select(driver.find_element_by_xpath(\"\"\"//*[@id=\"dev_setEndYear\"]\"\"\"))\n",
    "    end_years.select_by_value(f'{endYear}')\n",
    "\n",
    "\n",
    "    time.sleep(0.2)\n",
    "\n",
    "    #검색하기 클릭 \n",
    "    find = \"\"\"//*[@id=\"mainCenter\"]/div/article[1]/div/form/div[2]/button\"\"\"\n",
    "    driver.find_element_by_xpath(find).click()\n",
    "\n",
    "    time.sleep(3)\n",
    "    \n",
    "    df = pd.DataFrame()\n",
    "    soup = BeautifulSoup(driver.page_source, \"lxml\")\n",
    "    table = soup.find_all('table')[1]\n",
    "    df1 = pd.read_html(str(table))[0]\n",
    "    df = df.append(df1)\n",
    "    df.columns = [\"Type\", \"Year\", \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \n",
    "                 \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Total\"]\n",
    "\n",
    "    return(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "purchase = purchasing_type()\n",
    "purchase.to_excel(r'purchasing_type_data.xlsx')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
